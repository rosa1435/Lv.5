// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Users {
  id        Int       @id @default(autoincrement()) @map("id")
  nickname  String    @unique @map("nickname")
  password  String    @map("password")
  userType  UserTypes @default(CUSTOMER) @map("userType")
  @@map("Users")
}

enum UserTypes{
  CUSTOMER
  OWNER
}

model Categories {
  id     Int    @id @default(autoincrement()) @map("id")
  name   String @map("name")
  order  Int    @map("order")
  deletedAt   DateTime? @map("deletedAt")

  menus Menus[]
  
  @@map("Categories")
}

model Menus{
  id          Int        @id @default(autoincrement()) @map("id")
  name        String     @map("name")
  description String     @db.Text @map("description")
  image       String     @map("image")
  price       Int        @map("price")
  order       Int        @map("order")
  status      Status     @default(FOR_SALE) @map("status")
  categoryId  Int        @map("categoryId")
  category    Categories @relation(fields: [categoryId], references: [id])
  deletedAt   DateTime? @map("deletedAt")
  @@map("Menus")
}

enum Status{
  FOR_SALE
  SOLD_OUT
}

model Orders {
  id        Int       @id @default(autoincrement())
  userId    Int
  menuId    Int
  quantity  Int
  orderType OrderType @default(PENDING)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  total     Int
}

enum OrderType {
  PENDING
  ACCEPTED
  CANCEL
}